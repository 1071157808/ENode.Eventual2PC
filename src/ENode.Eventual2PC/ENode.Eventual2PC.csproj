<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <GeneratePackageOnBuild>false</GeneratePackageOnBuild>
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageProjectUrl>https://github.com/berkaroad/ENode.Eventual2PC</PackageProjectUrl>
    <RepositoryUrl>https://github.com/berkaroad/ENode.Eventual2PC</RepositoryUrl>
    <Authors>Jerry Bai</Authors>
    <PackageId>ENode.Eventual2PC</PackageId>
    <Version>1.1.0</Version>
    <Title>ENode.Eventual2PC</Title>
    <Description>基于Eventual2PC的最终一致性二阶段提交实现，用于ENode。</Description>
    <PackageTags>enode 2pc eventual transaction processmanager saga</PackageTags>
    <PackageReleaseNotes>
1）`TransactionInitiatorBase` 添加校验逻辑，以符合 `Eventual2PC` 中的规约描述
2）新增 `TransactionInitiatorAlsoActAsOtherParticipantBase`，以满足一个聚合根实例既是事务A的 `Initiator`， 又是事务B的 `Participant` 的场景 
3）小重构，将事件接口替换为抽象类，目的是为了减少使用方的编码量
    </PackageReleaseNotes>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="ENode" Version="2.9.6" />
    <PackageReference Include="Eventual2PC" Version="1.0.2" />
  </ItemGroup>

</Project>
